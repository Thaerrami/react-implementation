{"version":3,"sources":["Comp/Hello.js","redux/actions.js","Comp/navbar.js","Comp/updateuser.js","Comp/api.js","Comp/contactUs.js","Home.js","Comp/login.js","Comp/settings.js","Comp/foot.js","Comp/about.js","Comp/todo.js","Comp/Bar.js","Comp/fliper.js","Comp/view.js","App.js","serviceWorker.js","store/state.js","store/reducer.js","store/store.js","index.js"],"names":["Hello","state","bool","stater","fun1","fun2","setState","className","this","props","mode","type","onClick","make_light","make_night","React","Component","connect","zefta","value","dispatch","NavBar","style","classNames","toLowerCase","dark","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","to","width","Updateuser","a","axios","get","res","delete","values","put","Contactus","size","obj","x","putuser","user","us","opened","deleteuser","then","data","arr","del","splice","err","console","log","update","alert","catch","er","loaded","getuser","response","showerbar","classnames","popup_show_data_closer","cover","contain","name","phone","username","website","Data","Loading","onSubmit","map","key","margin","Home","e","includes","former","vis","window","location","replace","setTimeout","close","onNameEnter","target","display","handleSubmit","render","component","validate","Yup","shape","min","max","required","email","password","class","data-dismiss","initialValues","validationSchema","resp","error","login","componentDidMount","Settings","nightmood","sound","lang","bodye","Foot","footer","About","Todo","putdata","textfield","task","index","dat","complited","comp","task2","cdone","removeall","confirm","addnewtask","push","text","shir","valdata","col","done","classes","red","length","green","c","no_task","add_task","input","headtodo","onKeyDown","onChange","todo","scrollTo","Bar","bar","onscroll","scrolled","document","body","scrollTop","documentElement","scrollHeight","clientHeight","Fliper","when","dirty","message","View","getuserone","booler","componentWillMount","match","params","Show","App","styler","path","Login","exact","Boolean","hostname","initialstate","reducer","action","store","createStore","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.856f5c71.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { make_night , make_light } from '../redux';\r\nimport './nightmodebutton.css';\r\n\r\nclass Hello extends React.Component{\r\nstate={bool:true}\r\nstater=(fun1,fun2)=>{\r\n\r\n  this.setState({bool:!this.state.bool})\r\n  this.state.bool?fun2():fun1()\r\n  \r\n\r\n}\r\nrender(){\r\nreturn(\r\n    <>\r\n\r\n\r\n<div >\r\n  <span className='m-3 font-weight-bold'>\r\n{this.props.mode}\r\n</span>\r\n <label className=\"switch\" >\r\n   <input type=\"checkbox\" onClick={()=>this.stater(this.props.make_light,this.props.make_night)} />\r\n   <span className=\"slider round\"></span>\r\n </label>\r\n </div>\r\n            \r\n         \r\n    </>\r\n)\r\n\r\n}}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      zefta:state.value,\r\n      mode:state.mode\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n  return{\r\n    make_night:()=>dispatch(make_night()),\r\n    make_light:()=>dispatch(make_light())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Hello)","export const make_night = () => {\r\n    return{\r\n        type:'NIGHT'\r\n    }\r\n}\r\n\r\nexport const make_light = () => {\r\n    \r\n    return{\r\n        type:'LIGHT'\r\n    }\r\n}\r\n\r\n","import React  from 'react';\r\nimport './nightmodebutton.css';\r\nimport {Link} from 'react-router-dom';\r\nimport { Navbar, Nav} from 'react-bootstrap';\r\nimport Hello from './Hello';\r\nimport classNames from \"classnames\";\r\nimport { connect } from 'react-redux'\r\nclass NavBar extends React.Component{\r\n  render(){\r\n   const style=classNames({'bg-light text-dark':this.props.mode.toLowerCase()==='light','bg-dark text-white':this.props.mode.toLowerCase()==='night'});\r\n   const dark=classNames({'dark':this.props.mode.toLowerCase()==='night','light':this.props.mode.toLowerCase()==='light'})\r\n   \r\n   return (\r\n    <div>\r\n      <Navbar collapseOnSelect expand=\"lg\" bg={dark} variant={dark} className={style}>\r\n        <Navbar.Brand href=\"#home\" className={style}>React-Bootstrap</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link ><Link to='/home'>Formik taining</Link></Nav.Link>\r\n          <Nav.Link ><Link to='/contactUs'>contactUs api fetch traning</Link></Nav.Link>\r\n          <Nav.Link ><Link to='/todo'>todo state managemnt traning</Link></Nav.Link>\r\n          <div style={{width:'fit-content'}} >\r\n            <Hello />\r\n\r\n          </div>\r\n        </Nav>\r\n        <Nav>\r\n          </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n\r\n    </div>\r\n    );\r\n    \r\n  }\r\n}\r\n\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      zefta:state.value,\r\n      mode:state.mode\r\n    }\r\n}\r\n\r\n\r\n  export default connect(mapStateToProps)(NavBar);","import React from 'react'\r\n\r\nexport default function Updateuser(props) {\r\n    return (\r\n          \r\n        <>\r\n        </>\r\n        \r\n    )\r\n}\r\n","import axios from 'axios';\r\n\r\nexport  async function getuser()  {\r\n    const res=await axios.get(`https://jsonplaceholder.typicode.com/users`);\r\n    return res;\r\n    }\r\n\r\n    export  async function getuserone(id)  {\r\n        const res=await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        return res;\r\n        }\r\n\r\n    export  async function deleteuser(id)  {\r\n        const res=await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        return res;\r\n        }\r\n\r\nexport async function update(id,values){\r\n    const res=await axios.put('https://jsonplaceholder.typicode.com/users/'+id, values);\r\n    return res;\r\n}\r\n    ","import React  from 'react';\r\nimport './con.css'\r\nimport Updateuser from './updateuser.js';\r\nimport {getuser , deleteuser ,update} from './api';\r\nimport classnames from 'classnames';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames'\r\n\r\nclass Contactus extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            user:[],\r\n            loaded:false,\r\n            us:{},\r\n            opened:true\r\n        }\r\n    }\r\n\r\n/*  when data fetched completed the load icon will   stop  */ \r\n\r\ncomponentDidMount() \r\n{\r\n    try{\r\n        getuser().then(response=>{\r\n            \r\n            this.setState({user:response.data})\r\n            this.setState({loaded:true})\r\n                    })\r\n       }\r\n    catch(err){\r\n        console.log(err);\r\n       }\r\n}\r\n\r\n//size of object \r\n    size=(obj)=>{\r\n        let size=0;\r\n        for(let x in obj){if(x!==null)size++;}\r\n        return size\r\n    }\r\n   \r\n// put the user data clicked-on in view div\r\n    putuser=(user)=>{\r\n        this.setState({us:user})\r\n        this.setState({opened:true});\r\n        \r\n    }\r\n\r\n// delete user data from api\r\n\r\n    deleteuser=(user)=>{\r\n        \r\n        try{deleteuser(user.id).then(res=>{\r\n            this.setState({user:res.data})\r\n      var  arr=this.state.user;\r\n       var del=[...arr]\r\n        del.splice(user,1)\r\n            this.setState({user:del})\r\n        })  }\r\n        catch(err){console.log(err)}\r\n        \r\n    }\r\n\r\n//update the data for user in api\r\n\r\n    update=(values)=>{\r\n         const id=this.state.us.id;\r\n         update(id,values).then(()=>{\r\n             alert('success');\r\n            }).catch(er=>{\r\n            alert('err') \r\n        })\r\n}\r\n\r\n///main \r\n\r\n    render() {\r\n//\r\n\r\nconst showerbar=classnames({'container':true,'jumbotron':true,'dsi':true,'popup_show_data':this.state.opened,popup_show_data_closer:!this.state.opened});\r\nconst cover=classnames({'blod':this.state.opened,'close':!this.state.opened,'bg-light text-dark':this.props.mode.toLowerCase()==='light','bg-dark text-white':this.props.mode.toLowerCase()==='night'});\r\n\r\nconst style=classNames({'bg-light text-dark':this.props.mode.toLowerCase()==='light','bg-dark text-white':this.props.mode.toLowerCase()==='night'});\r\n   const contain=classNames({'container':true,'text-dark':this.props.mode.toLowerCase()==='light','text-white':this.props.mode.toLowerCase()==='night'})\r\n\r\nconst {name, phone ,username,website}=this.state.us;\r\n\r\n        return (\r\n            <div className={style}>\r\n                    {this.size(this.state.us)>0 ?(\r\n                        <div className={cover}>\r\n                           \r\n                    <div className={showerbar}>\r\n                     <div className='cardhead'>{website}</div>\r\n                     <span className=\"close\" onClick={()=>{this.setState({opened:false});console.log('close',this.state.opened)}}>&times;</span>\r\n                   \r\n                       <div style={{width:'100%'}}>\r\n                       \r\n                        <p>name : {name}</p><br/>\r\n                         <p>phone : {phone}</p><br/>\r\n                         <p>username : {username}</p>\r\n                         </div>\r\n                         \r\n                    </div>\r\n                    </div> ): ''}\r\n                    <ul className={style}>\r\n                         {this.state.loaded===true? <Data user={this.state.user} putuser={this.putuser}  deleteuser={this.deleteuser} dark={this.props.mode.toLowerCase()==='night'} /> : <Loading />  }\r\n                    </ul>\r\n                    <div  className={contain}>\r\n                        <Updateuser onSubmit={this.update}   values={this.state.us}  />\r\n                  </div>\r\n                  \r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction Data(props) {\r\n    const mode=classNames({'lilo':true,'text-dark bg-white':props.dark===false,'text-primary bg-black':props.dark===true})\r\n    return (\r\n        <div>\r\n        \r\n            {props.user.map(\r\n               user=>(\r\n                <li key={user.id} className={mode} >\r\n                    <button className=\"btn btn-primary\" onClick={()=>{props.putuser(user)}}>select </button>&nbsp;&nbsp;\r\n                    {/* <button className=\"btn btn-primary\" onClick={()=>{props.deleteuser(user.id)}}> delete </button>&nbsp;&nbsp; */}\r\n                    {user.name}\r\n                </li>\r\n                )\r\n           )}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n function Loading() {\r\n    return (\r\n        <div>  \r\n<div className=\"loader\"></div>\r\n<p style={{width:\"fit-content\",margin:\"auto\"}}>loading...</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      zefta:state.value,\r\n      mode:state.mode\r\n    }\r\n  }\r\n  \r\n  \r\n  export default connect(mapStateToProps)(Contactus);","import React, { Component  } from 'react'\r\nimport { Formik, Field,ErrorMessage } from 'formik'\r\nimport { Link } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  \r\n    this.state = {\r\n      data:{},\r\n      vis:\"hid\",\r\n      former:\"forme\",\r\n      name:'awedawed'\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  onSubmit=e=>{\r\n    \r\n    this.setState({data:e})\r\n    if(!  e.name.includes('thaer')){\r\n      this.setState({former:\"formerr\"})\r\n      setTimeout(() => {\r\n        this.setState({former:\"forme\"});\r\n\r\n      }, 703);\r\n  }else{\r\n     \r\n      this.setState({former:\"forme\",vis:\"show\"})\r\n      window.location.replace(\"./todo\");\r\n    }\r\n  }\r\n  close=()=>{\r\n    this.setState({vis:\"hid\"})\r\n  }\r\n\r\nonNameEnter=(e)=>{\r\nthis.setState({name:e.target.value})\r\nconsole.log(e.target.value);\r\n}\r\n\r\n  display=props=>{\r\n    \r\n    return(\r\n      <form onSubmit={props.handleSubmit} className={this.state.former}>\r\n        <label>name :</label>\r\n        <Field className='form-control'  name ='name'  />\r\n        <ErrorMessage render={err=>(<div className=\"error\">{err}</div>)}  name='name' /><br />\r\n        <label>email :</label>\r\n        <Field className='form-control'  type=\"email\" name='email' />\r\n        <ErrorMessage component=\"span\" className=\"error\" name='email' /><br />\r\n        <label>password :</label>\r\n        <Field className='form-control' type=\"password\" name='password' />\r\n        <ErrorMessage component=\"span\" className=\"error\" name='password' />\r\n        <div className=\"submit-button\">\r\n        <button type=\"submit\" className=\"btn btn-success\">go</button>\r\n        <Link>forget password</Link>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n\r\n  validate=()=>{\r\n    const valide =Yup.object().shape({\r\n      name:Yup.string().min(3, 'Too Short!').max(70, 'Too Long!').required('enter the name '),\r\n      email:Yup.string().required('enter the email '),\r\n      password:Yup.string().required('enter the password')\r\n    })\r\n    return valide;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className={this.state.vis}>\r\n        <div class=\"alert alert-success alert-dismissible\">\r\n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" onClick={this.close}>&times;</button>\r\n    <strong>Success!</strong> \r\n  </div>\r\n  </div>\r\n        <Formik\r\n        initialValues={{name:'',email:'',password:''}}\r\n        onSubmit={this.onSubmit}\r\n        render={this.display}\r\n        validationSchema={this.validate()}\r\n        />\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport axios from 'axios';\r\n\r\nasync function getuser(){\r\n      try{\r\n            const resp = await axios.get(`https://jsonplaceholder.typicode.com/users`);\r\n            console.log(resp);\r\n            return resp\r\n      }\r\n      catch(err){\r\n            console.error(err);\r\n      }}\r\n\r\nexport default class login extends React.Component {\r\n      componentDidMount=()=> {\r\n            getuser();\r\n      }\r\n      \r\n      render() {\r\n            return (\r\n                  <div>\r\n                        \r\n                  </div>\r\n            )\r\n      }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './settings.css';\r\nimport classnames from 'classnames';\r\n\r\nexport default class Settings extends Component {\r\n      constructor(props) {\r\n            super(props)\r\n      \r\n            this.state = {\r\n                   dark:false,\r\n                   sound:true,\r\n                   lang:false\r\n            }\r\n      }\r\n      \r\n       nightmood=()=>{\r\n            this.setState({dark:!this.state.dark})    \r\n          if (this.state.dark){console.log('night');}\r\n          else{console.log('not ')}\r\n\r\n           \r\n      }\r\n    render() {\r\n          const bodye=classnames({'bodyer':this.state.dark,'dark-text':this.state.dark,'set-text':true});\r\n      \r\n          \r\n\r\n        return (\r\n            <div className={bodye}>\r\n      <div className='container todo-pice'>\r\n            <div className=\"btx\" >\r\n            <span className=\"tct\" >night mode</span><br/>\r\n            <label class=\"switch\" >\r\n                  <input type=\"checkbox\" onClick={this.nightmood} />\r\n                  <span class=\"slider round\"></span>\r\n            </label>\r\n            </div>\r\n      </div>\r\n      <div className='container todo-pice'>\r\n            <div className=\"btx\">\r\n            <span className=\"tct\">ENG/AR</span><br/>\r\n            <label class=\"switch\">\r\n                  <input type=\"checkbox\"/>\r\n                  <span class=\"slider round\"></span>\r\n            </label>\r\n            </div>\r\n      </div>\r\n      <div className='container todo-pice'>\r\n            <div className=\"btx\">\r\n            <span className=\"tct\">sound</span><br/>\r\n            <label class=\"switch\">\r\n                  <input type=\"checkbox\"/>\r\n                  <span class=\"slider round\"></span>\r\n            </label>\r\n            </div>\r\n      </div>\r\n      <div className='container todo-pice'>\r\n            <div className=\"btx\">\r\n            <span className=\"tct\">sound</span><br/>\r\n            <label class=\"switch\">\r\n                  <input type=\"checkbox\"/>\r\n                  <span class=\"slider round\"></span>\r\n            </label>\r\n            </div>\r\n      </div>\r\n      <div className='container todo-pice'>\r\n            <div className=\"btx\">\r\n            <span className=\"tct\">sound</span><br/>\r\n            <label class=\"switch\">\r\n                  <input type=\"checkbox\"/>\r\n                  <span class=\"slider round\"></span>\r\n            </label>\r\n            </div>\r\n      </div>\r\n      <div className='container todo-pice'>\r\n            <div className=\"btx\">\r\n            <span className=\"tct\">sound</span><br/>\r\n            <label class=\"switch\">\r\n                  <input type=\"checkbox\"/>\r\n                  <span class=\"slider round\"></span>\r\n            </label>\r\n            </div>\r\n      </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux';\r\nimport classNames from 'classnames';\r\nclass Foot extends Component {\r\n    render() {\r\n      const style=classNames({'bg-light text-dark':this.props.mode.toLowerCase()==='light','bg-dark text-white':this.props.mode.toLowerCase()==='night'});\r\n   const footer=classNames({'page-footer font-small pt-4':true,'bg-white   text-dark':this.props.mode.toLowerCase()==='light','bg-dark text-white':this.props.mode.toLowerCase()==='night'})\r\n  \r\n\r\n        return (\r\n            <div className={style}>\r\n                \r\n      <footer className={footer}>\r\n\r\n<div className=\"container-fluid text-center  text-md-left\">\r\n\r\n\r\n  <div className=\"row\">\r\n\r\n\r\n    <div className=\"col-md-6 mt-md-0 mt-3\">\r\n\r\n      <h5 className=\"text-uppercase\">react formik and yup test</h5>\r\n      <p>this is the first time i use formik and yup </p>\r\n\r\n    </div>\r\n\r\n\r\n    <hr className=\"clearfix w-100 d-md-none pb-3\" />\r\n\r\n  \r\n    <div className=\"col-md-3 mb-md-0 mb-3\">\r\n\r\n      <h5 className=\"text-uppercase\">Links</h5>\r\n\r\n      <ul className=\"list-unstyled\">\r\n        <li>\r\n          <a href=\"#!\">Link 1</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"#!\">Link 2</a>\r\n        </li>\r\n      </ul>\r\n\r\n    </div>\r\n\r\n\r\n  </div>\r\n  \r\n\r\n</div>\r\n\r\n<div className=\"footer-copyright text-center py-3\">© 2020 Copyright:\r\n  <a href=\"https://mdbootstrap.com/\"> MDBootstrap.com</a>\r\n</div>\r\n\r\n\r\n</footer>\r\n</div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    zefta:state.value,\r\n    mode:state.mode\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Foot);","import React from 'react';\r\n\r\nimport './about.css';\r\n  \r\nconst About=()=>{\r\n  return(\r\n    <>\r\n    \r\n     {/* <div title=\"rawand\" className='img'>\r\n      <img title=\"rawand\" src='https://scontent.famm3-2.fna.fbcdn.net/v/t1.15752-9/102362843_253812912370915_8902320972325978112_n.jpg?_nc_cat=103&_nc_sid=b96e70&_nc_eui2=AeFfui9YLtiqG_yep35EpqL9oF9YyW1mZ72gX1jJbWZnvXVj-v68oU-QRBeflXP6cWsk_B23YyN1w7K_a3ZZNE_V&_nc_ohc=g0bW11wofDgAX8oZK7N&_nc_ht=scontent.famm3-2.fna&oh=04616ffe0a045129d4b7b8281d9e4755&oe=5EFCD6FA'  />\r\n      </div>\r\n     */}\r\n    </>\r\n        );\r\n  }\r\n export default About;  ","import React, { Component } from 'react'\r\nimport './todo.css';\r\nimport classnames from 'classnames';\r\nimport Bar from './about';\r\nimport classNames from 'classnames';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Todo extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            dat:[{text:\"react js\",comp:false}\r\n            ,{text:\"node js\",comp:false}],\r\n            textfield:\"\",\r\n            valdata:\"add task\",\r\n            col:\"green\",\r\n            done:\"done\",\r\n            cdone:[]\r\n        }\r\n    }\r\n\r\n    putdata=(e)=>{\r\n        this.setState({textfield:e.target.value})\r\n    }\r\n\r\n     task=(index)=>{\r\n         let arr=[...this.state.dat];\r\n         arr.splice(index,1);\r\n        this.setState({dat:arr});\r\n        }\r\n\r\n        complited=(index)=>{\r\n            let arr=[...this.state.dat];\r\n         arr[index].comp=!arr[index].comp;\r\n        this.setState({dat:arr});\r\n        }\r\n\r\n    task2=(index)=>{\r\n       this.setState({cdone:'btn btn-success'});\r\n     \r\n   }\r\n   \r\nremoveall=()=>{\r\n    \r\n    let x=window.confirm(\"are you sure this will delete all tasks!\");\r\n    if(x){\r\n        this.setState({dat:[]});\r\n    }\r\n}\r\n\r\n    addnewtask=()=>{\r\n    if(this.state.textfield !==''){\r\n        console.log(this.state)\r\n        const arr=[...this.state.dat];\r\n        arr.push({text:this.state.textfield});\r\n        this.setState({dat:arr})\r\n        this.setState({textfield:\"\"})\r\n    } \r\n    /* ended*/ \r\n    \r\n }\r\n\r\n    shir = (e) => {\r\n        if (e.key === 'Enter') {\r\n            this.addnewtask()\r\n        }\r\n      }\r\n\r\n      \r\n    render() { \r\n          let classes=classnames ({red:this.state.dat.length===0,green :this.state.dat.length > 0})\r\n          let c=classnames ({no_task:this.state.dat.length===0,add_task :this.state.dat.length > 0})\r\n          const style=classNames({'bg-light text-dark':this.props.mode.toLowerCase()==='light','bg-dark text-white':this.props.mode.toLowerCase()==='night'});\r\n           const input=classNames({'form-control todo-adder':true,'dark':this.props.mode.toLowerCase()==='night','light':this.props.mode.toLowerCase()==='light'})\r\n          const headtodo=classnames({'head-todo':true,'bg-dark text-white':this.props.mode.toLowerCase()==='night','bg-light text-dark':this.props.mode.toLowerCase()==='light'});\r\n        return (\r\n            <div className={style}>\r\n                <Bar />\r\n                <div className={style}>\r\n                    \r\n                 <input className={input} onKeyDown={this.shir} value={this.state.textfield} onChange={this.putdata}  />\r\n             <div className='button-holder'>\r\n                <button className=\"btn btn-danger todo-adder-button\"  onClick={this.removeall}>remove all</button>\r\n                <button className=\"btn btn-success todo-adder-button\"  onClick={this.addnewtask}>add task</button>\r\n            </div>\r\n               </div>\r\n        <p className={ classes }  >{c}</p>\r\n               <ul className={headtodo}>\r\n                {\r\n                this.state.dat.map((todo,index)=>\r\n                <li key={index} className={todo.comp?'completed lilo':'lilo'} >   \r\n                    <button className=\"btn btn-primary\" onClick ={()=>{this.task(index)}}> remove </button> &nbsp;\r\n                    <button className=\"btn btn-primary\" onClick ={()=>{this.complited(index)}}> comleted </button> &nbsp;\r\n                  <p className=\"data\">{`${todo.text}  `}</p>  \r\n                   </li>)\r\n                }   \r\n                </ul>\r\n                \r\n               <span className='up' onClick={()=>window.scrollTo(0,0)}>&#8679;</span> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      zefta:state.value,\r\n      mode:state.mode\r\n    }\r\n}\r\n\r\n\r\n  export default connect(mapStateToProps)(Todo);","import React from 'react'\r\n\r\nexport default class Bar extends React.Component {\r\n    constructor(props) {\r\n      super(props)\r\n  \r\n      this.state = {\r\n        bar:0\r\n      }\r\n    }\r\n  \r\n    render() {\r\n     const  s=()=>{\r\n      var winScroll = document.body.scrollTop || document.documentElement.scrollTop;\r\n      var height = document.documentElement.scrollHeight - document.documentElement.clientHeight;\r\n      var scrolled = (winScroll / height) * 100;\r\n          this.setState({width:scrolled})\r\n      }\r\n      window.onscroll=s;\r\n      return (\r\n        <>\r\n        <div   className='road' style={{width:this.state.width+'%'}}    >\r\n          \r\n          </div>\r\n\r\n        </>\r\n      )\r\n    }\r\n  }","import React, { Component } from 'react'\r\nimport './fliper.css' ;\r\nimport {Prompt} from 'react-router-dom';\r\nimport {Formik,Form,Field} from 'formik';\r\n\r\nclass Fliper extends Component{\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            name:'',\r\n            email:'',\r\n            password:''\r\n        }\r\n    }\r\n\r\nget name(){\r\nreturn 4;\r\n}\r\n    render(){\r\n       \r\n   const submit=(props)=>{\r\n        console.log(props)\r\n    }\r\n   \r\n   const structureoform=(props)=>{\r\n    return(\r\n        <>\r\n        <Form>\r\n        <Prompt when={props.dirty} message={'are you fucken sure'} />\r\n            <Field className='form-control' name='name' />\r\n            <Field className='form-control' type='email' name=\"email\" />\r\n            <Field className='form-control' type='password' name ='password' />\r\n            <button type=\"submit\" className='btn btn-primary' >go</button>\r\n        </Form>\r\n        </>\r\n    )\r\n    }\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <div className='face'>\r\n                        <p>\r\n                            login\r\n                        </p>\r\n                    </div>\r\n                    <div className='back'>\r\n                         <p>\r\n                            enter your data\r\n                        </p>\r\n                            <Formik\r\n                            initialValues={{name:\"\",email:'',password:''}}\r\n                            onSubmit={submit}\r\n                            render={structureoform}\r\n                            />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n        }   \r\n}\r\n\r\nexport default Fliper;","import React, { Component } from 'react'\r\nimport {getuserone} from './api';\r\nimport './settings.css';\r\nexport default class View extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            user:{},\r\n            booler:false\r\n        }\r\n    }\r\n    get=(id)=>{\r\n      try{  \r\n          getuserone(id).then(resp=>{\r\n          this.setState({user:resp})\r\n          this.setState({booler:true})\r\n      })\r\n    }catch(err){\r\n          console.log(err)\r\n          console.log(\"err\")\r\n      }\r\n    }\r\n\r\n        componentWillMount=()=>{\r\n           this.get(this.props.match.params.id)\r\n        }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                view\r\n                {console.log()}\r\n                {this.state.booler?<Show name={this.state.user.data.name} id={this.state.user.data.id} username={this.state.user.data.username} email={this.state.user.data.email}  />:''}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst Show =(props)=>{\r\n    return(\r\n        <>\r\n        <div className='form-control'>{props.name}</div><br />\r\n    <div className='form-control'>{props.id}</div><br />\r\n    <div className='form-control'>{props.username}</div><br />\r\n    <div className='form-control'>{props.email}</div>\r\n    {console.log(props)}\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport NavBar from './Comp/navbar'\nimport Contactus from './Comp/contactUs';\nimport Home from './Home';\nimport Login from './Comp/login';\nimport Settings from './Comp/settings';\nimport Foot from './Comp/foot';\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom';\nimport Todo from \"./Comp/todo\";\n//import Form from 'react-bootstrap/Form';\nimport './App.css';\nimport Bar from './Comp/Bar'\nimport Fliper from './Comp/fliper';\nimport View from './Comp/view';\nimport {connect} from 'react-redux';\nimport classNames from 'classnames';\nclass App extends React.Component {\n\n  render(){\n    const styler=classNames({'bg-light text-dark':this.props.mode.toLowerCase()==='light','bg-dark text-white':this.props.mode.toLowerCase()==='night'});\n  \n    return (\n       <Router> \n  <div className={styler}>\n      <NavBar/>\n    <Bar />\n       <Switch >\n        <Route  path=\"/login\" component={Login} />\n        <Route  path=\"/view/:id\" exact component={View} />\n        <Route  path=\"/settings\" component={Settings}/>\n        <Route  path=\"/contactUs\" component={Contactus}/>\n        <Route  exact path=\"/todo\" component={Todo}/>\n        <Route   path=\"/home\" component={Home}/>\n        <Route   path=\"/fliper\" component={Fliper}/>\n        <Route exact path=\"/\"component={Contactus}/>\n      </Switch>\n        <Foot />\n  </div>\n       </Router>\n  );\n}\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    zefta:state.value,\n    mode:state.mode\n  }\n}\n\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialstate ={\r\n    mode:'light',\r\n    value:'light'\r\n}\r\n\r\nexport default initialstate","import  initialstate  from './state'\r\n\r\n function reducer ( state=initialstate,action) {\r\n    switch(action.type)\r\n    {\r\n        case 'NIGHT':\r\n            return {\r\n                value:'night' ,\r\n                mode:'night'\r\n            }\r\n        case 'LIGHT':\r\n            return{\r\n                value:'light' ,\r\n                mode :'light'\r\n            }\r\n        default:return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import { createStore } from \"redux\"\r\nimport reducer from './reducer'\r\n\r\nconst store = createStore(reducer)\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport store from './store/store';\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}><App /></Provider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}